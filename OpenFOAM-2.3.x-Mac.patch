# HG changeset patch
# Parent c484792c3c037623473c0a8f11a5e52e66c0e929

diff --git a/applications/solvers/combustion/fireFoam/Make/options b/applications/solvers/combustion/fireFoam/Make/options
--- a/applications/solvers/combustion/fireFoam/Make/options
+++ b/applications/solvers/combustion/fireFoam/Make/options
@@ -36,8 +36,10 @@
     -lsampling \
     -lcompressibleRASModels \
     -lcompressibleLESModels \
+    -lcompressibleTurbulenceModel \
     -lspecie \
     -lfluidThermophysicalModels \
+    -lliquidProperties \
     -lsolidProperties \
     -lsolidMixtureProperties \
     -lthermophysicalFunctions \
@@ -53,5 +55,6 @@
     -lpyrolysisModels \
     -lregionCoupling \
     -llagrangianIntermediate \
+    -llagrangian \
     -llagrangianTurbulence \
     -lODE
diff --git a/applications/solvers/compressible/rhoSimpleFoam/rhoSimplecFoam/Make/options b/applications/solvers/compressible/rhoSimpleFoam/rhoSimplecFoam/Make/options
--- a/applications/solvers/compressible/rhoSimpleFoam/rhoSimplecFoam/Make/options
+++ b/applications/solvers/compressible/rhoSimpleFoam/rhoSimplecFoam/Make/options
@@ -13,6 +13,7 @@
     -lfluidThermophysicalModels \
     -lspecie \
     -lcompressibleRASModels \
+    -lcompressibleTurbulenceModel \
     -lfiniteVolume \
     -lsampling \
     -lmeshTools \
diff --git a/applications/solvers/heatTransfer/chtMultiRegionFoam/chtMultiRegionSimpleFoam/Make/options b/applications/solvers/heatTransfer/chtMultiRegionFoam/chtMultiRegionSimpleFoam/Make/options
--- a/applications/solvers/heatTransfer/chtMultiRegionFoam/chtMultiRegionSimpleFoam/Make/options
+++ b/applications/solvers/heatTransfer/chtMultiRegionFoam/chtMultiRegionSimpleFoam/Make/options
@@ -21,6 +21,7 @@
     -lfluidThermophysicalModels \
     -lsolidThermo \
     -lspecie \
+    -lmeshTools \
     -lcompressibleTurbulenceModel \
     -lcompressibleRASModels \
     -lcompressibleLESModels \
diff --git a/applications/solvers/incompressible/adjointShapeOptimizationFoam/Make/options b/applications/solvers/incompressible/adjointShapeOptimizationFoam/Make/options
--- a/applications/solvers/incompressible/adjointShapeOptimizationFoam/Make/options
+++ b/applications/solvers/incompressible/adjointShapeOptimizationFoam/Make/options
@@ -6,6 +6,7 @@
     -I$(LIB_SRC)/finiteVolume/lnInclude
 
 EXE_LIBS = \
+    -lincompressibleTurbulenceModel \
     -lincompressibleRASModels \
     -lincompressibleTransportModels \
     -lfiniteVolume
diff --git a/applications/solvers/incompressible/simpleFoam/SRFSimpleFoam/Make/options b/applications/solvers/incompressible/simpleFoam/SRFSimpleFoam/Make/options
--- a/applications/solvers/incompressible/simpleFoam/SRFSimpleFoam/Make/options
+++ b/applications/solvers/incompressible/simpleFoam/SRFSimpleFoam/Make/options
@@ -11,6 +11,7 @@
 
 
 EXE_LIBS = \
+    -lincompressibleTurbulenceModel \
     -lincompressibleRASModels \
     -lincompressibleTransportModels \
     -lfiniteVolume \
diff --git a/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/Make/options b/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/Make/options
--- a/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/Make/options
+++ b/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/Make/options
@@ -21,6 +21,7 @@
     -lfluidThermophysicalModels \
     -lspecie \
     -lradiationModels \
+    -lincompressibleTurbulenceModel \
     -lincompressibleRASModels \
     -lincompressibleLESModels \
     -lincompressibleTransportModels \
diff --git a/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/icoUncoupledKinematicParcelDyMFoam/Make/options b/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/icoUncoupledKinematicParcelDyMFoam/Make/options
--- a/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/icoUncoupledKinematicParcelDyMFoam/Make/options
+++ b/applications/solvers/lagrangian/icoUncoupledKinematicParcelFoam/icoUncoupledKinematicParcelDyMFoam/Make/options
@@ -27,6 +27,7 @@
     -lradiationModels \
     -lincompressibleRASModels \
     -lincompressibleLESModels \
+    -lincompressibleTurbulenceModel \
     -lincompressibleTransportModels \
     -lfiniteVolume \
     -lmeshTools \
diff --git a/applications/solvers/lagrangian/reactingParcelFilmFoam/Make/options b/applications/solvers/lagrangian/reactingParcelFilmFoam/Make/options
--- a/applications/solvers/lagrangian/reactingParcelFilmFoam/Make/options
+++ b/applications/solvers/lagrangian/reactingParcelFilmFoam/Make/options
@@ -30,6 +30,7 @@
     -lfvOptions \
     -lsampling \
     -lmeshTools \
+    -lcompressibleTurbulenceModel \
     -lcompressibleRASModels \
     -lcompressibleLESModels \
     -lspecie \
@@ -44,6 +45,8 @@
     -lradiationModels \
     -lsurfaceFilmModels \
     -lsurfaceFilmDerivedFvPatchFields \
+    -lliquidProperties \
+    -llagrangian \
     -llagrangianIntermediate \
     -llagrangianTurbulence \
     -lODE \
diff --git a/applications/solvers/multiphase/multiphaseEulerFoam/Make/options b/applications/solvers/multiphase/multiphaseEulerFoam/Make/options
--- a/applications/solvers/multiphase/multiphaseEulerFoam/Make/options
+++ b/applications/solvers/multiphase/multiphaseEulerFoam/Make/options
@@ -17,6 +17,7 @@
     -linterfaceProperties \
     -lincompressibleTransportModels \
     -lcompressibleMultiphaseEulerianInterfacialModels \
+    -lincompressibleTurbulenceModel \
     -lincompressibleLESModels \
     -lincompressibleRASModels \
     -lfiniteVolume
diff --git a/applications/utilities/mesh/generation/blockMesh/Make/options b/applications/utilities/mesh/generation/blockMesh/Make/options
--- a/applications/utilities/mesh/generation/blockMesh/Make/options
+++ b/applications/utilities/mesh/generation/blockMesh/Make/options
@@ -6,4 +6,5 @@
 EXE_LIBS = \
     -lblockMesh \
     -lmeshTools \
+    -lfiniteVolume \
     -ldynamicMesh
diff --git a/applications/utilities/mesh/generation/foamyQuadMesh/Make/options b/applications/utilities/mesh/generation/foamyQuadMesh/Make/options
--- a/applications/utilities/mesh/generation/foamyQuadMesh/Make/options
+++ b/applications/utilities/mesh/generation/foamyQuadMesh/Make/options
@@ -27,6 +27,8 @@
 
 EXE_LIBS = \
     $(CGAL_LIBS) \
+    -lboost_thread-mt \
+    -lgmp \
     -lextrude2DMesh \
     -lextrudeModel \
     -lcv2DMesh \
diff --git a/applications/utilities/mesh/generation/snappyHexMesh/Make/options b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
--- a/applications/utilities/mesh/generation/snappyHexMesh/Make/options
+++ b/applications/utilities/mesh/generation/snappyHexMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -g -DFULLDEBUG -O0 */ \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/mesh/autoMesh/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
diff --git a/applications/utilities/mesh/manipulation/renumberMesh/Make/options b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
--- a/applications/utilities/mesh/manipulation/renumberMesh/Make/options
+++ b/applications/utilities/mesh/manipulation/renumberMesh/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     ${COMPILE_FLAGS} \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/dynamicMesh/lnInclude \
diff --git a/applications/utilities/miscellaneous/expandDictionary/Make/options b/applications/utilities/miscellaneous/expandDictionary/Make/options
--- a/applications/utilities/miscellaneous/expandDictionary/Make/options
+++ b/applications/utilities/miscellaneous/expandDictionary/Make/options
@@ -1,2 +0,0 @@
-/* EXE_INC = */
-/* EXE_LIBS = */
diff --git a/applications/utilities/miscellaneous/foamDebugSwitches/Make/options b/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
--- a/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
+++ b/applications/utilities/miscellaneous/foamDebugSwitches/Make/options
@@ -42,10 +42,8 @@
     -lmeshTools \
     -lmolecularMeasurements \
     -lmolecule \
-/*    -lmultiphaseInterFoam  */ \
     -lODE \
     -lOpenFOAM \
-/*    -lphaseModel  */ \
     -lpotential \
     -lradiationModels \
     -lrandomProcesses \
diff --git a/applications/utilities/parallelProcessing/reconstructParMesh/Make/options b/applications/utilities/parallelProcessing/reconstructParMesh/Make/options
--- a/applications/utilities/parallelProcessing/reconstructParMesh/Make/options
+++ b/applications/utilities/parallelProcessing/reconstructParMesh/Make/options
@@ -4,5 +4,6 @@
     -I$(LIB_SRC)/meshTools/lnInclude
 
 EXE_LIBS = \
+    -lfiniteVolume \
     -ldynamicMesh \
     -lmeshTools
diff --git a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
--- a/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
+++ b/applications/utilities/postProcessing/dataConversion/foamToEnsight/Make/options
@@ -1,5 +1,4 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(LIB_SRC)/finiteVolume/lnInclude \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/sampling/lnInclude \
@@ -11,4 +10,3 @@
     -lsampling \
     -lgenericPatchFields \
     -llagrangian
-
diff --git a/applications/utilities/postProcessing/miscellaneous/execFlowFunctionObjects/Make/options b/applications/utilities/postProcessing/miscellaneous/execFlowFunctionObjects/Make/options
--- a/applications/utilities/postProcessing/miscellaneous/execFlowFunctionObjects/Make/options
+++ b/applications/utilities/postProcessing/miscellaneous/execFlowFunctionObjects/Make/options
@@ -12,10 +12,12 @@
     -lincompressibleTransportModels \
     -lincompressibleRASModels \
     -lincompressibleLESModels \
+    -lincompressibleTurbulenceModel \
     -lfluidThermophysicalModels \
     -lspecie \
     -lcompressibleRASModels \
     -lcompressibleLESModels \
+    -lcompressibleTurbulenceModel \
     -lfiniteVolume \
     -lfvOptions \
     -lmeshTools \
diff --git a/applications/utilities/postProcessing/turbulence/R/Make/options b/applications/utilities/postProcessing/turbulence/R/Make/options
--- a/applications/utilities/postProcessing/turbulence/R/Make/options
+++ b/applications/utilities/postProcessing/turbulence/R/Make/options
@@ -8,10 +8,12 @@
     -I$(LIB_SRC)/finiteVolume/lnInclude
 
 EXE_LIBS = \
+    -lincompressibleTurbulenceModel \
     -lincompressibleTransportModels \
     -lincompressibleRASModels \
     -lfluidThermophysicalModels \
     -lspecie \
+    -lcompressibleTurbulenceModel \
     -lcompressibleRASModels \
     -lfiniteVolume \
     -lgenericPatchFields \
diff --git a/applications/utilities/postProcessing/turbulence/createTurbulenceFields/Make/options b/applications/utilities/postProcessing/turbulence/createTurbulenceFields/Make/options
--- a/applications/utilities/postProcessing/turbulence/createTurbulenceFields/Make/options
+++ b/applications/utilities/postProcessing/turbulence/createTurbulenceFields/Make/options
@@ -5,6 +5,7 @@
     -I$(LIB_SRC)/finiteVolume/lnInclude
 
 EXE_LIBS = \
+    -lincompressibleTurbulenceModel \
     -lincompressibleRASModels \
     -lincompressibleTransportModels \
     -lfiniteVolume \
diff --git a/applications/utilities/postProcessing/velocityField/Pe/Make/options b/applications/utilities/postProcessing/velocityField/Pe/Make/options
--- a/applications/utilities/postProcessing/velocityField/Pe/Make/options
+++ b/applications/utilities/postProcessing/velocityField/Pe/Make/options
@@ -12,10 +12,12 @@
     -lincompressibleTransportModels \
     -lincompressibleRASModels \
     -lincompressibleLESModels \
+    -lincompressibleTurbulenceModel \
     -lfluidThermophysicalModels \
     -lspecie \
     -lcompressibleRASModels \
     -lcompressibleLESModels \
+    -lcompressibleTurbulenceModel \
     -lfiniteVolume \
     -lgenericPatchFields \
     -lmeshTools
diff --git a/applications/utilities/postProcessing/wall/wallShearStress/Make/options b/applications/utilities/postProcessing/wall/wallShearStress/Make/options
--- a/applications/utilities/postProcessing/wall/wallShearStress/Make/options
+++ b/applications/utilities/postProcessing/wall/wallShearStress/Make/options
@@ -7,8 +7,10 @@
 EXE_LIBS = \
     -lincompressibleTransportModels \
     -lincompressibleRASModels \
+    -lincompressibleTurbulenceModel \
     -lfluidThermophysicalModels \
     -lspecie \
     -lcompressibleRASModels \
+    -lcompressibleTurbulenceModel \
     -lfiniteVolume \
     -lgenericPatchFields
diff --git a/applications/utilities/postProcessing/wall/yPlusLES/Make/options b/applications/utilities/postProcessing/wall/yPlusLES/Make/options
--- a/applications/utilities/postProcessing/wall/yPlusLES/Make/options
+++ b/applications/utilities/postProcessing/wall/yPlusLES/Make/options
@@ -8,6 +8,7 @@
 
 EXE_LIBS = \
     -lincompressibleLESModels \
+    -lincompressibleTurbulenceModel \
     -lincompressibleTransportModels \
     -lfiniteVolume \
     -lgenericPatchFields
diff --git a/applications/utilities/postProcessing/wall/yPlusRAS/Make/options b/applications/utilities/postProcessing/wall/yPlusRAS/Make/options
--- a/applications/utilities/postProcessing/wall/yPlusRAS/Make/options
+++ b/applications/utilities/postProcessing/wall/yPlusRAS/Make/options
@@ -10,9 +10,11 @@
 EXE_LIBS = \
     -lincompressibleTransportModels \
     -lincompressibleRASModels \
+    -lincompressibleTurbulenceModel \
     -lfluidThermophysicalModels \
     -lspecie \
     -lcompressibleRASModels \
+    -lcompressibleTurbulenceModel \
     -lfiniteVolume \
     -lgenericPatchFields \
     -lmeshTools \
diff --git a/applications/utilities/preProcessing/applyBoundaryLayer/Make/options b/applications/utilities/preProcessing/applyBoundaryLayer/Make/options
--- a/applications/utilities/preProcessing/applyBoundaryLayer/Make/options
+++ b/applications/utilities/preProcessing/applyBoundaryLayer/Make/options
@@ -8,6 +8,7 @@
 
 EXE_LIBS = \
     -lfiniteVolume \
+    -lincompressibleTurbulenceModel \
     -lincompressibleRASModels \
     -lincompressibleLESModels \
     -lincompressibleTransportModels \
diff --git a/bin/addr2line4Mac.py b/bin/addr2line4Mac.py
new file mode 100755
--- /dev/null
+++ b/bin/addr2line4Mac.py
@@ -0,0 +1,49 @@
+#! /usr/bin/python
+
+import sys
+filename=sys.argv[1]
+address=sys.argv[2]
+import re
+from os import environ,path
+
+fullFile=None
+if path.exists(filename):
+    fullFile=filename
+
+for v in ["PATH","LD_LIBRARY_PATH"]:
+    if not fullFile:
+        for d in environ[v].split(':'):
+            if path.exists(path.join(d,filename)):
+                fullFile=path.join(d,filename)
+                break
+
+if not fullFile:
+    fullFile=filename
+
+answer="??:0"
+
+if path.exists(fullFile):
+    import subprocess
+
+    result=subprocess.Popen(["xcrun", "atos",
+                             "-o",fullFile,
+                             address],
+                            stdout=subprocess.PIPE
+                        ).communicate()[0]
+    match=re.compile('.+ \((.+)\) \((.+)\)').match(result)
+    if match:
+        answer=match.group(2)+" "+match.group(1)
+    else:
+        import os
+        result=subprocess.Popen(["xcrun", "atos",
+                                 "-p",str(os.getppid()),
+                                 address],
+                                stdout=subprocess.PIPE
+                            ).communicate()[0]
+        match=re.compile('.+ \((.+)\) \((.+)\)').match(result)
+        if match:
+            answer=match.group(2)+" "+match.group(1)
+
+print answer,
+
+sys.exit(255)
diff --git a/etc/bashrc b/etc/bashrc
--- a/etc/bashrc
+++ b/etc/bashrc
@@ -199,6 +199,10 @@
 
 #- Clean MANPATH
 cleaned=`$foamClean "$MANPATH" "$foamOldDirs"` && MANPATH="$cleaned"
+if [[ `uname -s` == "Darwin" ]]
+then
+    cleaned=`$foamClean "$DYLD_LIBRARY_PATH" "$foamOldDirs"` && DYLD_LIBRARY_PATH="$cleaned"
+fi
 
 export PATH LD_LIBRARY_PATH MANPATH
 
@@ -237,6 +241,14 @@
     export LD_PRELOAD
 fi
 
+if [[ `uname -s` == "Darwin" ]]
+then
+    if [[ `ulimit -n` == "unlimited" || `ulimit -n` < 8192 ]]
+    then
+	# higher limit needed for wmkdeps
+	ulimit -n 8192
+    fi
+fi
 
 # cleanup environment:
 # ~~~~~~~~~~~~~~~~~~~~
diff --git a/etc/config/CGAL.sh b/etc/config/CGAL.sh
--- a/etc/config/CGAL.sh
+++ b/etc/config/CGAL.sh
@@ -35,6 +35,22 @@
 export BOOST_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$boost_version
 export CGAL_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$cgal_version
 
+if [ -n "$WM_USE_MACPORT" ]
+then
+    if [ -d "/opt/local/include/boost" ]
+    then
+	export BOOST_ARCH_PATH=/opt/local
+    else
+	echo "No boost in MacPorts. Install boost with 'port install boost'"
+    fi
+    if [ -d "/opt/local/include/CGAL" ]
+    then
+	export CGAL_ARCH_PATH=/opt/local
+    else
+	echo "No CGAL in MacPorts. Install CGAL with 'port install cgal'"
+    fi
+fi
+
 if [ "$FOAM_VERBOSE" -a "$PS1" ]
 then
     echo "Using CGAL and boost"
diff --git a/etc/config/metis.sh b/etc/config/metis.sh
--- a/etc/config/metis.sh
+++ b/etc/config/metis.sh
@@ -36,4 +36,15 @@
 export METIS_VERSION=metis-5.1.0
 export METIS_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$METIS_VERSION
 
+if [ -n "$WM_USE_MACPORT" ]
+then
+    if [ -e "/opt/local/include/metis.h" ]
+    then
+	export METIS_ARCH_PATH=/opt/local
+	unset METIS_VERSION
+    else
+	echo "No metis in MacPorts. Install metis with 'port install metis'"
+    fi
+fi
+
 # -----------------------------------------------------------------------------
diff --git a/etc/config/paraview.sh b/etc/config/paraview.sh
--- a/etc/config/paraview.sh
+++ b/etc/config/paraview.sh
@@ -144,6 +144,19 @@
     unset PV_PLUGIN_PATH
 fi
 
+if [ $WM_ARCH_BASE=="darwin" ]
+then
+    : ${PARAVIEW_APP_DIR:="/Applications/paraview.app"}; export PARAVIEW_APP_DIR
+    if [ -d $PARAVIEW_APP_DIR -a ! -r $ParaView_DIR ]
+    then
+	echo "Using paraview in directory $PARAVIEW_APP_DIR"
+	unset ParaView_VERSION ParaView_MAJOR ParaView_DIR
+	# needs to be an alias because if it is in the path the Python Shell does not work
+	alias paraview=$PARAVIEW_APP_DIR/Contents/MacOS/paraview
+	export PATH=$PARAVIEW_APP_DIR/Contents/bin:$PATH
+    fi
+fi
+
 unset _foamParaviewEval
 unset cleaned cmake paraviewInstDir paraviewPython
 
diff --git a/etc/config/scotch.sh b/etc/config/scotch.sh
--- a/etc/config/scotch.sh
+++ b/etc/config/scotch.sh
@@ -36,4 +36,16 @@
 export SCOTCH_VERSION=scotch_6.0.0
 export SCOTCH_ARCH_PATH=$WM_THIRD_PARTY_DIR/platforms/$WM_ARCH$WM_COMPILER/$SCOTCH_VERSION
 
+if [ -n "$WM_USE_MACPORT" ]
+then
+    if [ -e "/opt/local/include/scotch.h" ]
+    then
+	export SCOTCH_ARCH_PATH=/opt/local
+	export SCOTCH_ROOT=$SCOTCH_ARCH_PATH
+#	unset SCOTCH_VERSION
+    else
+	echo "No scotch in MacPorts. Install scotch with 'port install scotch'"
+    fi
+fi
+
 # -----------------------------------------------------------------------------
diff --git a/etc/config/settings.sh b/etc/config/settings.sh
--- a/etc/config/settings.sh
+++ b/etc/config/settings.sh
@@ -46,6 +46,14 @@
     while [ $# -ge 1 ]
     do
         export LD_LIBRARY_PATH=$1:$LD_LIBRARY_PATH
+	if [ "$WM_ARCH_BASE" == "darwin" ]
+	then
+	    # do NOT add the lib of MacPort as this might break programs
+	    if [ "$1" != "/opt/local/lib" ]
+	    then
+		export DYLD_LIBRARY_PATH=$1:$DYLD_LIBRARY_PATH
+	    fi
+	fi
         shift
     done
 }
@@ -151,6 +159,152 @@
     export WM_LDFLAGS='-mabi=64 -G0'
     ;;
 
+Darwin)
+    export WM_ARCH_BASE=darwin
+
+    case `uname -p` in
+    powerpc)
+	export WM_ARCH=darwinPpc
+	;;
+    i386)
+	export WM_ARCH=darwinIntel
+        case $WM_ARCH_OPTION in
+        32)
+            export WM_COMPILER_LIB_ARCH=32
+            export WM_CC='gcc'
+            export WM_CXX='g++'
+            export WM_CFLAGS='-m32 -fPIC'
+            export WM_CXXFLAGS='-m32 -fPIC'
+            export WM_LDFLAGS='-m32'
+            ;;
+        64)
+            WM_ARCH=darwinIntel64
+            export WM_COMPILER_LIB_ARCH=64
+            export WM_CC='gcc'
+            export WM_CXX='g++'
+            export WM_CFLAGS='-m64 -fPIC'
+            export WM_CXXFLAGS='-m64 -fPIC'
+            export WM_LDFLAGS='-m64'
+            ;;
+        *)
+            echo Unknown WM_ARCH_OPTION $WM_ARCH_OPTION, should be 32 or 64
+            ;;
+        esac
+	;;
+    *)
+        echo "Unknown architecture "`uname -p` "for Darwin"
+    esac
+
+    which -s port >/dev/null
+    if [ $? -eq "0" -a -d '/opt/local/etc/macports' ]
+    then
+	if [ "$FOAM_VERBOSE" -a "$PS1" ]
+	then
+	    echo "Using Macports binaries"
+	fi
+
+	export WM_USE_MACPORT=1
+	export WM_BASE_COMPILER=`echo $WM_COMPILER | tr -d "[:digit:]"`
+	export WM_MACPORT_MPI_VERSION=`echo $WM_COMPILER | tr "[:upper:]" "[:lower:]"`
+	export WM_MACPORT_VERSION=`echo $WM_MACPORT_MPI_VERSION | tr -d "[:alpha:]" | sed -e "s/\(.\)\(.\)/\1\.\2/"`
+
+	if [ -z "$WM_CHOSEN_MAC_MPI" ]
+	then
+	    if [ -e '/opt/local/bin/mpicc' ]
+	    then
+		readlink /opt/local/bin/mpicc | grep openmpi >/dev/null
+		if [ $? -eq "0" ]
+		then
+		    export WM_MPLIB=MACPORTOPENMPI
+		    if [ "$FOAM_VERBOSE" -a "$PS1" ]
+		    then
+			echo "Using OpenMPI from MacPorts"
+		    fi
+		else
+		    readlink /opt/local/bin/mpicc | grep mpich >/dev/null
+		    if [ $? -eq "0" ]
+		    then
+			export WM_MPLIB=MACPORTMPICH
+			if [ "$FOAM_VERBOSE" -a "$PS1" ]
+			then
+			    echo "Using MPICH from MacPorts"
+			fi
+		    else
+			echo "/opt/local/bin/mpicc neither OpenMPI nor MPICH. Confused. Defaulting to OPENMPI"
+			export WM_MPLIB=OPENMPI
+		    fi
+		fi
+	    fi
+	else
+	    export WM_MPLIB=$WM_CHOSEN_MAC_MPI
+	    if [ "$FOAM_VERBOSE" -a "$PS1" ]
+	    then
+		echo "User chose WM_CHOSEN_MAC_MPI=$WM_CHOSEN_MAC_MPI"
+	    fi
+	fi
+
+	if [ "$WM_MPLIB" == "MACPORTOPENMPI" ]
+	then
+	    if [ ! -e "/opt/local/lib/openmpi-$WM_MACPORT_MPI_VERSION" ]
+	    then
+		export WM_MACPORT_MPI_VERSION=mp
+		if [ ! -e "/opt/local/lib/openmpi-$WM_MACPORT_MPI_VERSION" ]
+		then
+		    echo "Proper OpenMPI not installed. Either do 'port install openmpi-$WM_MACPORT_MPI_VERSION' or 'port install openmpi-default'"
+		fi
+	    fi
+	else
+	    if [ "$WM_MPLIB" == "MACPORTMPICH" ]
+	    then
+		if [ ! -e "/opt/local/lib/mpich-$WM_MACPORT_MPI_VERSION" ]
+		then
+		    echo "MPICH wants the same version as the used compiler. Do 'port install mpich-$WM_MACPORT_MPI_VERSION'"
+		fi
+	    fi
+	fi
+
+	if [ "$WM_COMPILER" != "Gcc" ]
+	then
+	    if [ "$WM_BASE_COMPILER" == "Gcc" ]
+	    then
+		export WM_CC="gcc-mp-$WM_MACPORT_VERSION"
+		export WM_CXX="g++-mp-$WM_MACPORT_VERSION"
+	    elif [ "$WM_BASE_COMPILER" == "Clang" ]
+	    then
+		export WM_CC="clang-mp-$WM_MACPORT_VERSION"
+		export WM_CXX="clang++-mp-$WM_MACPORT_VERSION"
+	    elif [ "$WM_BASE_COMPILER" == "Dragonegg" ]
+	    then
+		export WM_CC="dragonegg-$WM_MACPORT_VERSION-gcc"
+		export WM_CXX="dragonegg-$WM_MACPORT_VERSION-g++"
+	    else
+		echo "Unknown base compiler $WM_BASE_COMPILER"
+	    fi
+
+	    ruleDirBase=$WM_PROJECT_DIR/wmake/rules/$WM_ARCH
+	    ruleDirTarget=$ruleDirBase$WM_BASE_COMPILER
+	    ruleDir=$ruleDirBase$WM_COMPILER
+	    if [ ! -e $ruleDir ]
+	    then
+		echo "Rule directory $ruleDir not existing. Linking to $ruleDirTarget"
+		ln -s $ruleDirTarget $ruleDir
+	    fi
+	    unset ruleDir ruleDirBase
+	fi
+    else
+	echo "Seems you're not using MacPorts. This is currently not supported/tested. Find this line in 'etc/config/settings.sh', modify it accordingly and send patches to Bernhard"
+        export WM_COMPILER=
+        export WM_MPLIB=OPENMPI
+    fi
+
+    # Make sure that binaries use the best features of the used OS-Version
+    # We need to get rid of the revision number from this string. eg turn "10.7.5" into "10.7"
+    #    v=(`sw_vers -productVersion | sed 's/\./ /g'`)
+    #    export MACOSX_DEPLOYMENT_TARGET="${v[1]}.${v[2]}"
+    export MACOSX_DEPLOYMENT_TARGET=`sw_vers -productVersion | sed -e "s/\([0-9][0-9]*\)\.\([0-9][0-9]*\)\.\([0-9][0-9]*\)/\1.\2/g"`
+    ;;
+
+
 *)    # an unsupported operating system
     /bin/cat <<USAGE 1>&2
 
@@ -391,6 +545,19 @@
     unset libDir
     ;;
 
+MACPORTOPENMPI)
+	unset OPAL_PREFIX
+
+	export FOAM_MPI=openmpi-macport-$WM_MACPORT_MPI_VERSION
+
+	# Currently not correctly working on MacPorts
+	#	libDir=`mpicc-openmpi-$WM_MACPORT_MPI_VERSION --showme:libdirs`
+	libDir=/opt/local/lib/openmpi-$WM_MACPORT_MPI_VERSION
+
+	_foamAddLib     $libDir
+	unset libDir
+	;;
+
 OPENMPI)
     export FOAM_MPI=openmpi-1.6.5
     # optional configuration tweaks:
@@ -439,6 +606,17 @@
     _foamAddLib     $GM_LIB_PATH
     ;;
 
+MACPORTMPICH)
+    export FOAM_MPI=mpich-macports-$WM_MACPORT_MPI_VERSION
+    export MPI_HOME=$WM_THIRD_PARTY_DIR/$FOAM_MPI
+
+    libDir=/opt/local/lib/mpich-$WM_MACPORT_MPI_VERSION
+
+    _foamAddLib     $libDir
+    unset libDir
+
+    ;;
+
 HPMPI)
     export FOAM_MPI=hpmpi
     export MPI_HOME=/opt/hpmpi
@@ -566,6 +744,23 @@
 fi
 export MPI_BUFFER_SIZE
 
+if [ -n "$WM_USE_MACPORT" ]
+then
+    if [ -e "/opt/local/include/mpfr.h" ]
+    then
+	export MPFR_ARCH_PATH=/opt/local
+	unset MPFR_VERSION
+    else
+	echo "No mpfr in MacPorts. Install mpfr with 'port install mpfr'"
+    fi
+    if [ -e "/opt/local/include/gmp.h" ]
+    then
+	export GMP_ARCH_PATH=/opt/local
+	unset GMP_VERSION
+    else
+	echo "No gmp in MacPorts. Install gmp with 'port install gmp'"
+    fi
+fi
 
 # cleanup environment:
 # ~~~~~~~~~~~~~~~~~~~~
diff --git a/etc/controlDict b/etc/controlDict
--- a/etc/controlDict
+++ b/etc/controlDict
@@ -18,7 +18,8 @@
 
 Documentation
 {
-    docBrowser      "firefox %f";
+    //    docBrowser      "firefox %f";
+    docBrowser      "open %f";
     doxyDocDirs
     (
         "$WM_PROJECT_USER_DIR/html"
diff --git a/src/OSspecific/POSIX/POSIX.C b/src/OSspecific/POSIX/POSIX.C
--- a/src/OSspecific/POSIX/POSIX.C
+++ b/src/OSspecific/POSIX/POSIX.C
@@ -53,7 +53,10 @@
 #include <sys/socket.h>
 #include <netdb.h>
 #include <dlfcn.h>
+#ifndef darwin
 #include <link.h>
+#else
+#endif
 
 #include <netinet/in.h>
 
@@ -1174,6 +1177,14 @@
     }
     void* handle = ::dlopen(lib.c_str(), RTLD_LAZY|RTLD_GLOBAL);
 
+#ifdef darwin
+    if(!handle && lib.ext()=="so") {
+        fileName lName=lib.lessExt()+".dylib";
+        handle = 
+            dlopen(lName.c_str(), RTLD_LAZY|RTLD_GLOBAL);
+    }
+#endif
+
     if (!handle && check)
     {
         WarningIn("dlOpen(const fileName&, const bool)")
@@ -1267,9 +1278,15 @@
     void *data
 )
 {
+#ifdef darwin
+    WarningIn("collectLibsCallback")
+        << "Not yet implemented for Mac OS X"
+            << Foam::endl;
+#else
     Foam::DynamicList<Foam::fileName>* ptr =
         reinterpret_cast<Foam::DynamicList<Foam::fileName>*>(data);
     ptr->append(info->dlpi_name);
+#endif
     return 0;
 }
 
@@ -1277,7 +1294,13 @@
 Foam::fileNameList Foam::dlLoaded()
 {
     DynamicList<fileName> libs;
+#ifdef darwin
+    WarningIn("dlLoaded")
+        << "Not yet implemented for Mac OS X"
+            << endl;
+#else
     dl_iterate_phdr(collectLibsCallback, &libs);
+#endif
     if (POSIX::debug)
     {
         std::cout
diff --git a/src/OSspecific/POSIX/clockTime/clockTime.H b/src/OSspecific/POSIX/clockTime/clockTime.H
--- a/src/OSspecific/POSIX/clockTime/clockTime.H
+++ b/src/OSspecific/POSIX/clockTime/clockTime.H
@@ -37,6 +37,9 @@
 #define clockTime_H
 
 #include <sys/types.h>
+#ifdef darwin
+#include <sys/time.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/fileStat.C b/src/OSspecific/POSIX/fileStat.C
--- a/src/OSspecific/POSIX/fileStat.C
+++ b/src/OSspecific/POSIX/fileStat.C
@@ -29,7 +29,9 @@
 
 #include <signal.h>
 #include <unistd.h>
+#ifndef darwin
 #include <sys/sysmacros.h>
+#endif
 
 // * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * //
 
diff --git a/src/OSspecific/POSIX/printStack.C b/src/OSspecific/POSIX/printStack.C
--- a/src/OSspecific/POSIX/printStack.C
+++ b/src/OSspecific/POSIX/printStack.C
@@ -33,6 +33,11 @@
 #include <cxxabi.h>
 #include <execinfo.h>
 #include <dlfcn.h>
+#include <string.h>
+
+#ifdef darwin
+#include <mach-o/dyld.h>
+#endif
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -53,11 +58,22 @@
         for (label cnt = 0; cnt <= line; cnt++)
         {
             char buffer[MAX];
+
             char* s = fgets(buffer, MAX-1, cmdPipe);
 
             if (s == NULL)
             {
+#ifdef darwin
+                // workaround for the Python-Script
+                for(int i=0;i<MAX;i++) {
+                    if(buffer[i]=='\n') {
+                        buffer[i]='\0';
+                    }
+                }
+                return buffer;
+#else
                 return "";
+#endif
             }
 
             if (cnt == line)
@@ -86,7 +102,11 @@
 {
     word myAddress = address;
 
+#ifndef darwin
     if (filename.ext() == "so")
+#else
+    if (filename.ext() == "dylib")
+#endif
     {
         // Convert offset into .so into offset into executable.
 
@@ -97,7 +117,7 @@
 
         dladdr(addr, &info);
 
-        unsigned long offset = ulong(info.dli_fbase);
+        unsigned long offset = (unsigned long)(info.dli_fbase);
 
         IStringStream addressStr(address.substr(2));
         long addressValue = ReadHex<long>(addressStr);
@@ -109,11 +129,19 @@
         myAddress = nStream.str();
     }
 
+#ifndef darwin
     if (filename[0] == '/')
+#else
+    if (1)
+#endif
     {
         string line = pOpen
         (
+#ifndef darwin
             "addr2line -f --demangle=auto --exe "
+#else
+            "addr2line4Mac.py "
+#endif
           + filename
           + " "
           + myAddress,
@@ -151,7 +179,11 @@
     {
         string fcnt = pOpen
         (
+#ifndef darwin
             "addr2line -f --demangle=auto --exe "
+#else
+            "addr2line4Mac.py "
+#endif
           + filename
           + " "
           + address
@@ -166,7 +198,6 @@
     os  << "Uninterpreted: " << raw.c_str();
 }
 
-
 void error::safePrintStack(std::ostream& os)
 {
     // Get raw stack symbols
@@ -231,6 +262,7 @@
 
         os  << '#' << label(i) << "  ";
         //os  << "Raw   : " << msg << "\n\t";
+#ifndef darwin
         {
             string::size_type lPos = msg.find('[');
             string::size_type rPos = msg.find(']');
@@ -260,7 +292,38 @@
         }
 
         string::size_type bracketPos = msg.find('(');
-
+#else
+        string::size_type counter=0;
+        while(msg[counter]!=' ') {
+            counter++;
+        }
+        while(msg[counter]==' ') {
+            counter++;
+        }
+        string::size_type fileStart=counter;
+        while(msg[counter]!=' ') {
+            counter++;
+        }
+        programFile = msg.substr(fileStart,counter-fileStart);
+        if(programFile=="???") {
+            char path[1024];
+            uint32_t size = sizeof(path);
+            if (_NSGetExecutablePath(path, &size) == 0) {
+                programFile=path;
+            } else {
+                programFile="unknownFile";
+            }
+        }
+        while(msg[counter]==' ') {
+            counter++;
+        }
+        string::size_type addrStart=counter;
+        while(msg[counter]!=' ') {
+            counter++;
+        }
+        address = msg.substr(addrStart,counter-addrStart);
+#endif
+#ifndef darwin
         if (bracketPos != string::npos)
         {
             string::size_type start = bracketPos+1;
@@ -270,7 +333,21 @@
             if (plusPos != string::npos)
             {
                 string cName(msg.substr(start, plusPos-start));
+#else
+        if(1){
+            while(msg[counter]==' ') {
+                counter++;
+            }
+            string::size_type nameStart=counter;
+            while(msg[counter]!=' ') {
+                counter++;
+            }
 
+            string::size_type start = counter;
+
+            if(1) {
+                string cName(msg.substr(nameStart,counter-nameStart));
+#endif
                 int status;
                 char* cplusNamePtr = abi::__cxa_demangle
                 (
diff --git a/src/OSspecific/POSIX/signals/sigFpe.C b/src/OSspecific/POSIX/signals/sigFpe.C
--- a/src/OSspecific/POSIX/signals/sigFpe.C
+++ b/src/OSspecific/POSIX/signals/sigFpe.C
@@ -42,6 +42,12 @@
 
 #   include <sigfpe.h>
 
+#elif defined(__APPLE__)
+
+// #   include <fenv.h>
+#include <xmmintrin.h>
+#include <mach/mach.h>
+
 #endif
 
 #include <stdint.h>
@@ -82,10 +88,40 @@
     return result;
 }
 
+#elif defined(__APPLE__)
+
+void *(*Foam::sigFpe::system_malloc_)(malloc_zone_t *zone, size_t size)=NULL;
+
+void* Foam::sigFpe::nan_malloc_(malloc_zone_t *zone, size_t size)
+{
+    void *result=system_malloc_(zone,size);
+
+    // initialize to signalling NaN
+#   ifdef WM_SP
+
+    const uint32_t sNAN = 0x7ff7fffflu;
+    uint32_t* dPtr = reinterpret_cast<uint32_t*>(result);
+
+#   else
+
+    const uint64_t sNAN = 0x7ff7ffffffffffffllu;
+    uint64_t* dPtr = reinterpret_cast<uint64_t*>(result);
+
+#   endif
+
+    const size_t nScalars = size/sizeof(scalar);
+    for (size_t i = 0; i < nScalars; ++i)
+    {
+        *dPtr++ = sNAN;
+    }
+
+    return result;
+}
+
 #endif
 
 
-#ifdef LINUX_GNUC
+#if defined(LINUX_GNUC) || defined(__APPLE__)
 
 void Foam::sigFpe::sigHandler(int)
 {
@@ -150,6 +186,44 @@
             __malloc_hook = oldMallocHook_;
         }
 
+            #       elif defined(__APPLE__)
+
+        if(system_malloc_!=NULL) {
+            malloc_zone_t *zone = malloc_default_zone();
+            if(zone==NULL) {
+                FatalErrorIn("Foam__sigFpe::set")
+                    << "Could not get malloc_default_zone()." << endl
+                        << "Seems like this version of Mac OS X doesn't support FOAM_SETNAN"
+                        << endl
+                        << exit(FatalError);
+
+            }
+
+            if(zone->version>=8)
+            {
+                vm_protect(
+                    mach_task_self(),
+                    (uintptr_t)zone,
+                    sizeof(malloc_zone_t),
+                    0,
+                    VM_PROT_READ | VM_PROT_WRITE
+                );//remove the write protection
+            }
+            zone->malloc=system_malloc_;
+            system_malloc_=NULL;
+            if(zone->version==8)
+            {
+                vm_protect(
+                    mach_task_self(),
+                    (uintptr_t)zone,
+                    sizeof(malloc_zone_t),
+                    0,
+                    VM_PROT_READ
+                );//put the write protection back
+            }
+
+        }
+
 #       endif
     }
 }
@@ -218,6 +292,28 @@
             NULL
         );
 
+#       elif defined(__APPLE__)
+
+        struct sigaction newAction;
+        newAction.sa_handler = sigHandler;
+        newAction.sa_flags = SA_NODEFER;
+        sigemptyset(&newAction.sa_mask);
+        if (sigaction(SIGFPE, &newAction, &oldAction_) < 0)
+        {
+            FatalErrorIn
+            (
+                "Foam::sigFpe::set()"
+            )   << "Cannot set SIGFPE trapping"
+                << abort(FatalError);
+        }
+        _MM_SET_EXCEPTION_MASK(_MM_GET_EXCEPTION_MASK() & ~_MM_MASK_INVALID);
+        _MM_SET_EXCEPTION_MASK(_MM_GET_EXCEPTION_MASK() & ~_MM_MASK_DIV_ZERO);
+
+        _mm_setcsr( _MM_MASK_MASK &~
+        (_MM_MASK_OVERFLOW|_MM_MASK_INVALID|_MM_MASK_DIV_ZERO) );
+
+        supported=true;
+
 #       endif
 
 
@@ -242,11 +338,56 @@
         bool supported = false;
 
 #       ifdef LINUX_GNUC
+
         supported = true;
 
         // Set our malloc
         __malloc_hook = Foam::sigFpe::nanMallocHook_;
 
+#elif defined(__APPLE__)
+
+        if(system_malloc_!=NULL) {
+            FatalErrorIn("Foam__sigFpe::set")
+                << "system_malloc_ already reset." << endl
+                    << "This should never happen"
+                    << endl
+                    << exit(FatalError);
+        }
+
+        malloc_zone_t *zone = malloc_default_zone();
+        if(zone==NULL) {
+            FatalErrorIn("Foam__sigFpe::set")
+                << "Could not get malloc_default_zone()." << endl
+                    << "Seems like this version of Mac OS X doesn't support FOAM_SETNAN"
+                    << endl
+                    << exit(FatalError);
+        }
+        // According to http://bkdc.ubiquity.ro/2011/07/how-to-set-malloc-hooks-in-osx-lion-107.html
+        if(zone->version>=8)
+        {
+            vm_protect(
+                mach_task_self(),
+                (uintptr_t)zone,
+                sizeof(malloc_zone_t),
+                0,
+                VM_PROT_READ | VM_PROT_WRITE
+            );//remove the write protection
+        }
+        system_malloc_=zone->malloc;
+        zone->malloc=Foam::sigFpe::nan_malloc_;
+        if(zone->version==8)
+        {
+            vm_protect(
+                mach_task_self(),
+                (uintptr_t)zone,
+                sizeof(malloc_zone_t),
+                0,
+                VM_PROT_READ
+            );//put the write protection back
+        }
+
+        supported=true;
+
 #       endif
 
 
diff --git a/src/OSspecific/POSIX/signals/sigFpe.H b/src/OSspecific/POSIX/signals/sigFpe.H
--- a/src/OSspecific/POSIX/signals/sigFpe.H
+++ b/src/OSspecific/POSIX/signals/sigFpe.H
@@ -55,6 +55,10 @@
 
 #include "UList.H"
 
+#ifdef __APPLE__
+#include <malloc/malloc.h>
+#endif
+
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
@@ -79,12 +83,20 @@
             //- NaN malloc function. From malloc_hook manpage.
             static void* nanMallocHook_(size_t size, const void *caller);
 
+#elif defined (__APPLE__)
+
+    //- pointer to the original malloc that is overrided
+    static void *(*system_malloc_)(malloc_zone_t *zone, size_t size);
+
+    //- the overriding handler
+    static void* nan_malloc_(malloc_zone_t *zone, size_t size);
+
 #       endif
 
 
     // Static data members
 
-#   ifdef LINUX_GNUC
+#   if defined(LINUX_GNUC) || defined(__APPLE__)
 
         //- Handler for caught signals
         static void sigHandler(int);
diff --git a/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C b/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C
--- a/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C
+++ b/src/OpenFOAM/db/dictionary/functionEntries/codeStream/codeStream.C
@@ -30,6 +30,7 @@
 #include "dynamicCode.H"
 #include "dynamicCodeContext.H"
 #include "Time.H"
+#include "longLong.H"
 
 // * * * * * * * * * * * * * * Static Data Members * * * * * * * * * * * * * //
 
diff --git a/src/OpenFOAM/db/dynamicLibrary/codedBase/codedBase.C b/src/OpenFOAM/db/dynamicLibrary/codedBase/codedBase.C
--- a/src/OpenFOAM/db/dynamicLibrary/codedBase/codedBase.C
+++ b/src/OpenFOAM/db/dynamicLibrary/codedBase/codedBase.C
@@ -228,13 +228,15 @@
 
         off_t mySize = Foam::fileSize(libPath);
         off_t masterSize = mySize;
-        Pstream::scatter(masterSize);
+        label scatterMaster=masterSize;
+        Pstream::scatter(scatterMaster);
+        masterSize=scatterMaster;
 
         if (debug)
         {
             Pout<< endl<< "on processor " << Pstream::myProcNo()
-                << " have masterSize:" << masterSize
-                << " and localSize:" << mySize
+                << " have masterSize:" << label(masterSize)
+                << " and localSize:" << label(mySize)
                 << endl;
         }
 
@@ -244,9 +246,9 @@
             if (debug)
             {
                 Pout<< "Local file " << libPath
-                    << " not of same size (" << mySize
+                    << " not of same size (" << label(mySize)
                     << ") as master ("
-                    << masterSize << "). Waiting for "
+                    << label(masterSize) << "). Waiting for "
                     << regIOobject::fileModificationSkew
                     << " seconds." << endl;
             }
@@ -264,8 +266,8 @@
                 )   << "Cannot read (NFS mounted) library " << nl
                     << libPath << nl
                     << "on processor " << Pstream::myProcNo()
-                    << " detected size " << mySize
-                    << " whereas master size is " << masterSize
+                    << " detected size " << label(mySize)
+                    << " whereas master size is " << label(masterSize)
                     << " bytes." << nl
                     << "If your case is not NFS mounted"
                     << " (so distributed) set fileModificationSkew"
@@ -277,8 +279,8 @@
         if (debug)
         {
             Pout<< endl<< "on processor " << Pstream::myProcNo()
-                << " after waiting: have masterSize:" << masterSize
-                << " and localSize:" << mySize
+                << " after waiting: have masterSize:" << label(masterSize)
+                << " and localSize:" << label(mySize)
                 << endl;
         }
     }
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.C
@@ -50,6 +50,11 @@
 
 const char* const Foam::dynamicCode::topDirName = "dynamicCode";
 
+#ifndef darwin
+const char* const Foam::dynamicCode::dynamicLibExtension = ".so";
+#else
+const char* const Foam::dynamicCode::dynamicLibExtension = ".dylib";
+#endif
 
 // * * * * * * * * * * * * * Static Member Functions * * * * * * * * * * * * //
 
@@ -334,7 +339,7 @@
 
 Foam::fileName Foam::dynamicCode::libRelPath() const
 {
-    return codeRelPath()/libSubDir_/"lib" + codeName_ + ".so";
+    return codeRelPath()/libSubDir_/"lib" + codeName_ + dynamicLibExtension;
 }
 
 
diff --git a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
--- a/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
+++ b/src/OpenFOAM/db/dynamicLibrary/dynamicCode/dynamicCode.H
@@ -109,7 +109,8 @@
         //- Top-level directory name for copy/compiling
         static const char* const topDirName;
 
-
+        static const char* const dynamicLibExtension;
+       
     // Protected Member Functions
 
         //- Copy lines while expanding variables
@@ -221,7 +222,7 @@
         //  Corresponds to codeRoot()/libSubDir()/lib\<codeName\>.so
         fileName libPath() const
         {
-            return codeRoot_/libSubDir_/"lib" + codeName_ + ".so";
+            return codeRoot_/libSubDir_/"lib" + codeName_ + dynamicLibExtension;
         }
 
         //- Path for specified code name relative to \$FOAM_CASE
diff --git a/src/OpenFOAM/primitives/Scalar/doubleFloat.H b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
--- a/src/OpenFOAM/primitives/Scalar/doubleFloat.H
+++ b/src/OpenFOAM/primitives/Scalar/doubleFloat.H
@@ -31,6 +31,16 @@
 
 #include <cmath>
 
+#ifndef DUMMY_SCALAR_FUNCTIONS
+#define DUMMY_SCALAR_FUNCTIONS
+inline float j0f(float x) { return float(j0(double(x)));}
+inline float j1f(float x) { return float(j1(double(x)));}
+inline float y0f(float x) { return float(y0(double(x)));}
+inline float y1f(float x) { return float(y1(double(x)));}
+inline float jnf(const int n, const float s) { return float(jn(n, double(s))); }
+inline float ynf(const int n, const float s) { return float(yn(n, double(s))); }
+#endif
+ 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
 namespace Foam
diff --git a/src/conversion/ensight/part/ensightPart.C b/src/conversion/ensight/part/ensightPart.C
--- a/src/conversion/ensight/part/ensightPart.C
+++ b/src/conversion/ensight/part/ensightPart.C
@@ -51,7 +51,7 @@
         {
             const label id = idList[i];
 
-            if (id >= field.size() || isnan(field[id]))
+            if (id >= field.size() || std::isnan(field[id]))
             {
                 return false;
             }
diff --git a/src/conversion/ensight/part/ensightPartIO.C b/src/conversion/ensight/part/ensightPartIO.C
--- a/src/conversion/ensight/part/ensightPartIO.C
+++ b/src/conversion/ensight/part/ensightPartIO.C
@@ -63,7 +63,7 @@
     {
         forAll(idList, i)
         {
-            if (idList[i] >= field.size() || isnan(field[idList[i]]))
+            if (idList[i] >= field.size() || std::isnan(field[idList[i]]))
             {
                 os.writeUndef();
             }
@@ -80,7 +80,7 @@
         // no idList => perNode
         forAll(field, i)
         {
-            if (isnan(field[i]))
+            if (std::isnan(field[i]))
             {
                 os.writeUndef();
             }
diff --git a/src/dynamicMesh/fvMeshDistribute/fvMeshDistributeTemplates.C b/src/dynamicMesh/fvMeshDistribute/fvMeshDistributeTemplates.C
--- a/src/dynamicMesh/fvMeshDistribute/fvMeshDistributeTemplates.C
+++ b/src/dynamicMesh/fvMeshDistribute/fvMeshDistributeTemplates.C
@@ -231,7 +231,7 @@
         // Send all fieldNames. This has to be exactly the same set as is
         // being received!
         const GeoField& fld =
-            subsetter.baseMesh().lookupObject<GeoField>(fieldNames[i]);
+            subsetter.baseMesh().objectRegistry::lookupObject<GeoField>(fieldNames[i]);
 
         tmp<GeoField> tsubfld = subsetter.interpolate(fld);
 
diff --git a/src/dynamicMesh/meshCut/refineCell/refineCell.H b/src/dynamicMesh/meshCut/refineCell/refineCell.H
--- a/src/dynamicMesh/meshCut/refineCell/refineCell.H
+++ b/src/dynamicMesh/meshCut/refineCell/refineCell.H
@@ -35,8 +35,8 @@
 #ifndef refineCell_H
 #define refineCell_H
 
+#include "vector.H"
 #include "label.H"
-#include "vector.H"
 
 // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
 
@@ -123,4 +123,3 @@
 #endif
 
 // ************************************************************************* //
-
diff --git a/src/fvOptions/Make/options b/src/fvOptions/Make/options
--- a/src/fvOptions/Make/options
+++ b/src/fvOptions/Make/options
@@ -13,5 +13,4 @@
     -lfiniteVolume \
     -lsampling \
     -lmeshTools \
-    /*-lsolidThermo*/ \
     -lcompressibleTurbulenceModel
diff --git a/src/meshTools/meshTools/meshTools.H b/src/meshTools/meshTools/meshTools.H
--- a/src/meshTools/meshTools/meshTools.H
+++ b/src/meshTools/meshTools/meshTools.H
@@ -35,8 +35,8 @@
 #ifndef meshTools_H
 #define meshTools_H
 
+#include "vector.H"
 #include "label.H"
-#include "vector.H"
 #include "triad.H"
 #include "labelList.H"
 #include "pointField.H"
diff --git a/src/parallel/decompose/ptscotchDecomp/Make/options b/src/parallel/decompose/ptscotchDecomp/Make/options
--- a/src/parallel/decompose/ptscotchDecomp/Make/options
+++ b/src/parallel/decompose/ptscotchDecomp/Make/options
@@ -8,5 +8,9 @@
     -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
+ifneq ($(WM_ARCH_BASE),darwin)
+RTLIB=-lrt
+endif
+
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN)/$(FOAM_MPI) -lptscotch -lptscotcherrexit ${LINK_FLAGS} -lrt
+    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN)/$(FOAM_MPI) -lptscotch -lptscotcherrexit ${LINK_FLAGS} $(RTLIB)
diff --git a/src/parallel/decompose/scotchDecomp/Make/options b/src/parallel/decompose/scotchDecomp/Make/options
--- a/src/parallel/decompose/scotchDecomp/Make/options
+++ b/src/parallel/decompose/scotchDecomp/Make/options
@@ -12,5 +12,9 @@
     -I/usr/include/scotch \
     -I../decompositionMethods/lnInclude
 
+ifneq ($(WM_ARCH_BASE),darwin)
+RTLIB=-lrt
+endif
+
 LIB_LIBS = \
-    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN) -lscotch -lscotcherrexit -lrt
+    -L$(SCOTCH_ROOT)/lib -L$(FOAM_EXT_LIBBIN) -lscotch -lscotcherrexit $(RTLIB)
diff --git a/src/renumber/Allwmake b/src/renumber/Allwmake
--- a/src/renumber/Allwmake
+++ b/src/renumber/Allwmake
@@ -20,6 +20,11 @@
 
 if [ -n "$BOOST_ARCH_PATH" ]
 then
+    if [ -n "$WM_USE_MACPORT" ]
+    then
+        export BOOST_THREAD_EXTENSION=-mt
+    fi
+
     wmake $makeType SloanRenumber
 else
     echo
diff --git a/src/renumber/SloanRenumber/Make/options b/src/renumber/SloanRenumber/Make/options
--- a/src/renumber/SloanRenumber/Make/options
+++ b/src/renumber/SloanRenumber/Make/options
@@ -1,12 +1,11 @@
 EXE_INC = \
-    /* -DFULLDEBUG -g -O0 */ \
     -I$(BOOST_ARCH_PATH)/include \
     -I$(LIB_SRC)/meshTools/lnInclude \
     -I$(LIB_SRC)/parallel/decompose/decompositionMethods/lnInclude \
     -I$(LIB_SRC)/renumber/renumberMethods/lnInclude
 
 LIB_LIBS = \
-    -L$(BOOST_ARCH_PATH)/lib -lboost_thread \
+    -L$(BOOST_ARCH_PATH)/lib -lboost_thread$(BOOST_THREAD_EXTENSION)  \
     -lmeshTools \
     -ldecompositionMethods \
     -lrenumberMethods
diff --git a/src/sampling/sampledSurface/writers/ensight/ensightPTraits.H b/src/sampling/sampledSurface/writers/ensight/ensightPTraits.H
--- a/src/sampling/sampledSurface/writers/ensight/ensightPTraits.H
+++ b/src/sampling/sampledSurface/writers/ensight/ensightPTraits.H
@@ -32,6 +32,7 @@
 #ifndef ensightPTraits_H
 #define ensightPTraits_H
 
+#include "vector.H"
 #include "pTraits.H"
 #include "fieldTypes.H"
 
diff --git a/wmake/Makefile b/wmake/Makefile
--- a/wmake/Makefile
+++ b/wmake/Makefile
@@ -91,7 +91,11 @@
 LIB             = libNULL
 
 # Shared library extension
+ifeq ($(WM_ARCH_BASE),darwin)
+SO              = dylib
+else
 SO              = so
+endif
 
 # Project executable
 EXE             = $(WM_PROJECT).out
diff --git a/wmake/rules/darwinIntel64Clang/c b/wmake/rules/darwinIntel64Clang/c
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/c
@@ -0,0 +1,17 @@
+.SUFFIXES: .c .h
+
+cWARN        = -Wall
+
+cc          = $(WM_CC) -m64   -ftrapping-math
+# -fsignaling-nans
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = -I/opt/local/include $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC -Ddarwin
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $$SOURCE -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -dynamiclib  -flat_namespace -undefined suppress
+LINKEXE     = $(cc) -Xlinker -z -Xlinker nodefs
diff --git a/wmake/rules/darwinIntel64Clang/c++ b/wmake/rules/darwinIntel64Clang/c++
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/c++
@@ -0,0 +1,23 @@
+.SUFFIXES: .C .cxx .cc .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor -Wno-overloaded-virtual -Wno-unused-comparison
+
+CC          = $(WM_CXX) -m64  -ftrapping-math
+# -fsignaling-nans
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    =  -I/opt/local/include $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC -Ddarwin
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $$SOURCE -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG) -lpthread
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -lpthread -dynamiclib -undefined dynamic_lookup
+# LINKEXE     = $(CC) $(c++FLAGS) -lpthread -L$(FOAM_LIBBIN) -lOpenFOAM -L$(FOAM_MPI_LIBBIN) -lPstream
+LINKEXE     = $(CC) $(c++FLAGS) -lpthread -L$(FOAM_LIBBIN)/$(FOAM_MPI) -lPstream
diff --git a/wmake/rules/darwinIntel64Clang/c++Debug b/wmake/rules/darwinIntel64Clang/c++Debug
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/c++Debug
@@ -0,0 +1,4 @@
+# c++DBUG    = -ggdb2 -DFULLDEBUG
+c++DBUG    = -g -DFULLDEBUG
+# c++OPT      = -O0 -fdefault-inline
+c++OPT      = -O0
diff --git a/wmake/rules/darwinIntel64Clang/c++Opt b/wmake/rules/darwinIntel64Clang/c++Opt
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/c++Opt
@@ -0,0 +1,5 @@
+c++DBUG     = 
+c++OPT      = -O2
+# c++OPT      = -O3
+#c++OPT      = -march=nocona -O3
+# -ftree-vectorize -ftree-vectorizer-verbose=3
diff --git a/wmake/rules/darwinIntel64Clang/c++Prof b/wmake/rules/darwinIntel64Clang/c++Prof
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/c++Prof
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff --git a/wmake/rules/darwinIntel64Clang/cDebug b/wmake/rules/darwinIntel64Clang/cDebug
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/cDebug
@@ -0,0 +1,4 @@
+cDBUG       = -g -DFULLDEBUG
+cOPT        = -O0
+# cDBUG       = -ggdb -DFULLDEBUG
+# cOPT        = -O1 -fdefault-inline -finline-functions
diff --git a/wmake/rules/darwinIntel64Clang/cOpt b/wmake/rules/darwinIntel64Clang/cOpt
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/cOpt
@@ -0,0 +1,3 @@
+cDBUG       = 
+cOPT        = -O2
+# cOPT        = -O3
diff --git a/wmake/rules/darwinIntel64Clang/cProf b/wmake/rules/darwinIntel64Clang/cProf
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/cProf
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff --git a/wmake/rules/darwinIntel64Clang/general b/wmake/rules/darwinIntel64Clang/general
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/general
@@ -0,0 +1,9 @@
+CPP        = cpp --traditional-cpp $(GFLAGS)
+LD         = ld
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
diff --git a/wmake/rules/darwinIntel64Clang/mplib b/wmake/rules/darwinIntel64Clang/mplib
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/mplib
@@ -0,0 +1,3 @@
+PFLAGS     = 
+PINC       = 
+PLIBS      = 
diff --git a/wmake/rules/darwinIntel64Clang/mplibMACPORTMPICH b/wmake/rules/darwinIntel64Clang/mplibMACPORTMPICH
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/mplibMACPORTMPICH
@@ -0,0 +1,3 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+PINC       = -I/opt/local/include/mpich-$(WM_MACPORT_MPI_VERSION)
+PLIBS      = -L/opt/local/lib/mpich-$(WM_MACPORT_MPI_VERSION) -lmpich -lpmpich
diff --git a/wmake/rules/darwinIntel64Clang/mplibMACPORTOPENMPI b/wmake/rules/darwinIntel64Clang/mplibMACPORTOPENMPI
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/mplibMACPORTOPENMPI
@@ -0,0 +1,3 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+PINC       = $(shell mpicc-openmpi-mp --showme:compile)
+PLIBS      = $(shell mpicc-openmpi-mp --showme:link)
diff --git a/wmake/rules/darwinIntel64Clang/mplibOPENMPI b/wmake/rules/darwinIntel64Clang/mplibOPENMPI
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Clang/mplibOPENMPI
@@ -0,0 +1,3 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+PINC       = -I$(MPI_ARCH_PATH)/include
+PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
diff --git a/wmake/rules/darwinIntel64Dragonegg/c b/wmake/rules/darwinIntel64Dragonegg/c
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/c
@@ -0,0 +1,16 @@
+.SUFFIXES: .c .h
+
+cWARN        = -Wall
+
+cc          = $(WM_CC) -m64 -fsignaling-nans  -ftrapping-math
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC -Ddarwin
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $$SOURCE -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -dynamiclib  -flat_namespace -undefined suppress
+LINKEXE     = $(cc) -Xlinker -z -Xlinker nodefs
diff --git a/wmake/rules/darwinIntel64Dragonegg/c++ b/wmake/rules/darwinIntel64Dragonegg/c++
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/c++
@@ -0,0 +1,22 @@
+.SUFFIXES: .C .cxx .cc .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor
+
+CC          = $(WM_CXX) -m64 -fsignaling-nans  -ftrapping-math
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC -Ddarwin
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $$SOURCE -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG) -lpthread
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -lpthread -dynamiclib -undefined dynamic_lookup
+# LINKEXE     = $(CC) $(c++FLAGS) -lpthread -L$(FOAM_LIBBIN) -lOpenFOAM -L$(FOAM_MPI_LIBBIN) -lPstream
+LINKEXE     = $(CC) $(c++FLAGS) -lpthread -L$(FOAM_LIBBIN)/$(FOAM_MPI) -lPstream
diff --git a/wmake/rules/darwinIntel64Dragonegg/c++Debug b/wmake/rules/darwinIntel64Dragonegg/c++Debug
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/c++Debug
@@ -0,0 +1,2 @@
+c++DBUG    = -ggdb2 -DFULLDEBUG
+c++OPT      = -O0 -fdefault-inline
diff --git a/wmake/rules/darwinIntel64Dragonegg/c++Opt b/wmake/rules/darwinIntel64Dragonegg/c++Opt
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/c++Opt
@@ -0,0 +1,5 @@
+c++DBUG     = 
+c++OPT      = -O2
+# c++OPT      = -O3
+#c++OPT      = -march=nocona -O3
+# -ftree-vectorize -ftree-vectorizer-verbose=3
diff --git a/wmake/rules/darwinIntel64Dragonegg/c++Prof b/wmake/rules/darwinIntel64Dragonegg/c++Prof
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/c++Prof
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff --git a/wmake/rules/darwinIntel64Dragonegg/cDebug b/wmake/rules/darwinIntel64Dragonegg/cDebug
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/cDebug
@@ -0,0 +1,2 @@
+cDBUG       = -ggdb -DFULLDEBUG
+cOPT        = -O1 -fdefault-inline -finline-functions
diff --git a/wmake/rules/darwinIntel64Dragonegg/cOpt b/wmake/rules/darwinIntel64Dragonegg/cOpt
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/cOpt
@@ -0,0 +1,3 @@
+cDBUG       = 
+cOPT        = -O2
+# cOPT        = -O3
diff --git a/wmake/rules/darwinIntel64Dragonegg/cProf b/wmake/rules/darwinIntel64Dragonegg/cProf
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/cProf
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff --git a/wmake/rules/darwinIntel64Dragonegg/general b/wmake/rules/darwinIntel64Dragonegg/general
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/general
@@ -0,0 +1,9 @@
+CPP        = cpp --traditional-cpp $(GFLAGS)
+LD         = ld
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
diff --git a/wmake/rules/darwinIntel64Dragonegg/mplib b/wmake/rules/darwinIntel64Dragonegg/mplib
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/mplib
@@ -0,0 +1,3 @@
+PFLAGS     = 
+PINC       = 
+PLIBS      = 
diff --git a/wmake/rules/darwinIntel64Dragonegg/mplibMACPORTMPICH b/wmake/rules/darwinIntel64Dragonegg/mplibMACPORTMPICH
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/mplibMACPORTMPICH
@@ -0,0 +1,3 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+PINC       = -I/opt/local/include/mpich-$(WM_MACPORT_MPI_VERSION)
+PLIBS      = -L/opt/local/lib/mpich-$(WM_MACPORT_MPI_VERSION) -lmpich -lpmpich
diff --git a/wmake/rules/darwinIntel64Dragonegg/mplibMACPORTOPENMPI b/wmake/rules/darwinIntel64Dragonegg/mplibMACPORTOPENMPI
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/mplibMACPORTOPENMPI
@@ -0,0 +1,5 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+# PINC       = $(shell mpicc-openmpi-$(WM_MACPORT_MPI_VERSION) --showme:compile)
+# PLIBS      = $(shell mpicc-openmpi-$(WM_MACPORT_MPI_VERSION)  --showme:link)
+PINC         = -I/opt/local/include/openmpi-$(WM_MACPORT_MPI_VERSION)
+PLIBS        = -L/opt/local/lib/openmpi-$(WM_MACPORT_MPI_VERSION) -lmpi
diff --git a/wmake/rules/darwinIntel64Dragonegg/mplibOPENMPI b/wmake/rules/darwinIntel64Dragonegg/mplibOPENMPI
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Dragonegg/mplibOPENMPI
@@ -0,0 +1,3 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+PINC       = -I$(MPI_ARCH_PATH)/include
+PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
diff --git a/wmake/rules/darwinIntel64Gcc/c b/wmake/rules/darwinIntel64Gcc/c
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/c
@@ -0,0 +1,16 @@
+.SUFFIXES: .c .h
+
+cWARN        = -Wall
+
+cc          = $(WM_CC) -m64 -fsignaling-nans  -ftrapping-math
+
+include $(RULES)/c$(WM_COMPILE_OPTION)
+
+cFLAGS      = $(GFLAGS) $(cWARN) $(cOPT) $(cDBUG) $(LIB_HEADER_DIRS) -fPIC -Ddarwin
+
+ctoo        = $(WM_SCHEDULER) $(cc) $(cFLAGS) -c $$SOURCE -o $@
+
+LINK_LIBS   = $(cDBUG)
+
+LINKLIBSO   = $(cc) -dynamiclib  -flat_namespace -undefined suppress
+LINKEXE     = $(cc) -Xlinker -z -Xlinker nodefs
diff --git a/wmake/rules/darwinIntel64Gcc/c++ b/wmake/rules/darwinIntel64Gcc/c++
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/c++
@@ -0,0 +1,22 @@
+.SUFFIXES: .C .cxx .cc .cpp
+
+c++WARN     = -Wall -Wextra -Wno-unused-parameter -Wold-style-cast -Wnon-virtual-dtor
+
+CC          = $(WM_CXX) -m64 -fsignaling-nans  -ftrapping-math
+
+include $(RULES)/c++$(WM_COMPILE_OPTION)
+
+ptFLAGS     = -DNoRepository -ftemplate-depth-100
+
+c++FLAGS    = $(GFLAGS) $(c++WARN) $(c++OPT) $(c++DBUG) $(ptFLAGS) $(LIB_HEADER_DIRS) -fPIC -Ddarwin
+
+Ctoo        = $(WM_SCHEDULER) $(CC) $(c++FLAGS) -c $$SOURCE -o $@
+cxxtoo      = $(Ctoo)
+cctoo       = $(Ctoo)
+cpptoo      = $(Ctoo)
+
+LINK_LIBS   = $(c++DBUG) -lpthread
+
+LINKLIBSO   = $(CC) $(c++FLAGS) -lpthread -dynamiclib -undefined dynamic_lookup
+# LINKEXE     = $(CC) $(c++FLAGS) -lpthread -L$(FOAM_LIBBIN) -lOpenFOAM -L$(FOAM_MPI_LIBBIN) -lPstream
+LINKEXE     = $(CC) $(c++FLAGS) -lpthread -L$(FOAM_LIBBIN)/$(FOAM_MPI) -lPstream
diff --git a/wmake/rules/darwinIntel64Gcc/c++Debug b/wmake/rules/darwinIntel64Gcc/c++Debug
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/c++Debug
@@ -0,0 +1,2 @@
+c++DBUG    = -ggdb2 -DFULLDEBUG
+c++OPT      = -O0 -fdefault-inline
diff --git a/wmake/rules/darwinIntel64Gcc/c++Opt b/wmake/rules/darwinIntel64Gcc/c++Opt
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/c++Opt
@@ -0,0 +1,5 @@
+c++DBUG     = 
+c++OPT      = -O2
+# c++OPT      = -O3
+#c++OPT      = -march=nocona -O3
+# -ftree-vectorize -ftree-vectorizer-verbose=3
diff --git a/wmake/rules/darwinIntel64Gcc/c++Prof b/wmake/rules/darwinIntel64Gcc/c++Prof
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/c++Prof
@@ -0,0 +1,2 @@
+c++DBUG    = -pg
+c++OPT     = -O2
diff --git a/wmake/rules/darwinIntel64Gcc/cDebug b/wmake/rules/darwinIntel64Gcc/cDebug
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/cDebug
@@ -0,0 +1,2 @@
+cDBUG       = -ggdb -DFULLDEBUG
+cOPT        = -O1 -fdefault-inline -finline-functions
diff --git a/wmake/rules/darwinIntel64Gcc/cOpt b/wmake/rules/darwinIntel64Gcc/cOpt
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/cOpt
@@ -0,0 +1,3 @@
+cDBUG       = 
+cOPT        = -O2
+# cOPT        = -O3
diff --git a/wmake/rules/darwinIntel64Gcc/cProf b/wmake/rules/darwinIntel64Gcc/cProf
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/cProf
@@ -0,0 +1,2 @@
+cDBUG       = -pg
+cOPT        = -O2
diff --git a/wmake/rules/darwinIntel64Gcc/general b/wmake/rules/darwinIntel64Gcc/general
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/general
@@ -0,0 +1,9 @@
+CPP        = cpp --traditional-cpp $(GFLAGS)
+LD         = ld
+
+PROJECT_LIBS = -l$(WM_PROJECT) -ldl
+
+include $(GENERAL_RULES)/standard
+
+include $(RULES)/c
+include $(RULES)/c++
diff --git a/wmake/rules/darwinIntel64Gcc/mplib b/wmake/rules/darwinIntel64Gcc/mplib
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/mplib
@@ -0,0 +1,3 @@
+PFLAGS     = 
+PINC       = 
+PLIBS      = 
diff --git a/wmake/rules/darwinIntel64Gcc/mplibMACPORTMPICH b/wmake/rules/darwinIntel64Gcc/mplibMACPORTMPICH
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/mplibMACPORTMPICH
@@ -0,0 +1,3 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+PINC       = -I/opt/local/include/mpich-$(WM_MACPORT_MPI_VERSION)
+PLIBS      = -L/opt/local/lib/mpich-$(WM_MACPORT_MPI_VERSION) -lmpich -lpmpich
diff --git a/wmake/rules/darwinIntel64Gcc/mplibMACPORTOPENMPI b/wmake/rules/darwinIntel64Gcc/mplibMACPORTOPENMPI
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/mplibMACPORTOPENMPI
@@ -0,0 +1,5 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+# PINC       = $(shell mpicc-openmpi-$(WM_MACPORT_MPI_VERSION) --showme:compile)
+# PLIBS      = $(shell mpicc-openmpi-$(WM_MACPORT_MPI_VERSION)  --showme:link)
+PINC         = -I/opt/local/include/openmpi-$(WM_MACPORT_MPI_VERSION)
+PLIBS        = -L/opt/local/lib/openmpi-$(WM_MACPORT_MPI_VERSION) -lmpi
diff --git a/wmake/rules/darwinIntel64Gcc/mplibOPENMPI b/wmake/rules/darwinIntel64Gcc/mplibOPENMPI
new file mode 100644
--- /dev/null
+++ b/wmake/rules/darwinIntel64Gcc/mplibOPENMPI
@@ -0,0 +1,3 @@
+PFLAGS     = -DOMPI_SKIP_MPICXX
+PINC       = -I$(MPI_ARCH_PATH)/include
+PLIBS      = -L$(MPI_ARCH_PATH)/lib -lmpi
